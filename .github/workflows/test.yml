name: test
run-name: ${{ github.actor }} - test 
on:  
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write 
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  setup: 
    runs-on: ubuntu-latest
    outputs:  
      response: ${{ steps.get-json.outputs.response }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v4 
      - id: get-json 
        run: |
          queryGraphQL='query ($owner: String!, $repo: String!) { repository(owner: $owner, name: $repo) { discussionCategories(first: 10) { nodes { id name } } } }'

          queryVariable='"owner": "jtorleon-studios-team", "repo": ".github"'
          
          scriptNodeJS='
            let categoryToFind = "Announcements";
            let discussionCategories = response.data.repository.discussionCategories;
            let find = discussionCategories.nodes.filter(v => v.name === categoryToFind);
            if (find) {
              console.log("success", find); 
            } else {
              throw new Error("not found discussionCategories", categoryToFind); 
            }
          '

          # execute graphql request
          apiResponse=$(curl -X POST \
            -H "Content-Type: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -d "{ \"query\": \"$queryGraphQL\", \"variables\": { $queryVariable } }" https://api.github.com/graphql)

          # execute javascript
          node -e "let response = JSON.parse('$apiResponse');$scriptNodeJS"
 